<div class="ui fluid card">
  <div class="content">
    <div class="header">
    <%= object.class.name.demodulize %> Status
    </div>
  </div>
  <div class="content">
    <p>Last synced: <%= pretty_print_time(object.last_synced) %></p>
    <% if object.class == JiraTeamMetrics::Domain %>
        <p>Synced boards: <%= object.synced_boards.count %> of <%= object.boards.count %></p>
    <% elsif object.class == JiraTeamMetrics::Board %>
        <p>Synced from: <%= pretty_print_time(object.synced_from) %></p>
        <p>
          <a class="item" target="_blank" href="<%= jira_board_url(@board) %>">
            <i class="external alternate icon"></i>
            Open board in Jira
          </a>
        </p>
        <p>
          <a class="item" target="_blank" href="<%= jira_board_issues_url(@board) %>">
            <i class="external alternate icon"></i>
            View issues in Jira
          </a>
        </p>
    <% end %>
  </div>
  <div class="extra content">
    <a class="ui button" href="#" onclick="showSyncModal();">Sync</a>
    <a class="ui button" href="#" onclick="showConfigModal();">Config</a>
    <% if object.class == JiraTeamMetrics::Domain %>
        <a class="ui button" href="<%= domain_metadata_path %>">Metadata</a>
    <% end %>
  </div>
</div>

<% if !@board.nil? %>
    <%= render partial: 'partials/sync_status_indicator', locals: { channel: 'JiraTeamMetrics::SyncBoardChannel', model_id: @board.id } %>
<% elsif !@domain.nil? %>
    <%= render partial: 'partials/sync_status_indicator', locals: { channel: 'JiraTeamMetrics::SyncDomainChannel', model_id: @domain.id } %>
<% end %>

<script id="sync-form-template" type="text/x-handlebars-template">
  <%= render partial: 'partials/sync_form' %>
</script>

<script id="config-form-template" type="text/x-handlebars-template">
  <%= render partial: 'partials/config_form' %>
</script>

<script>

  function showSyncModal(bodyHtml) {
    modal({
      title: 'Sync from JIRA',
      body: bodyHtml ? bodyHtml : $('#sync-form-template').html(),
      confirm: sync,
      positiveAction: {
        text: 'Sync'
      }
    });
  }

  function sync() {
    $.post(window.location.pathname + '/sync', $( "#sync-form" ).serialize())
        .fail(function(data) {
          if (data.status == 400) {
            // validation error
            showSyncModal(data.responseText);
          } else {
            alertModal({
              message: 'Unexpected error. Please raise a bug at github.com/jbrunton/jira-team-metrics.'
            });
          }
        });
  }

  function showConfigModal(bodyHtml) {
    fixedFooterModal({
      title: 'Update Config',
      body: bodyHtml ? bodyHtml : $('#config-form-template').html(),
      confirm: submitConfig,
      <% if readonly_mode? %>
          positiveAction: false,
      <% else %>
          positiveAction: { text: 'Submit' },
      <% end %>
    });
  }

  function submitConfig() {
    $.post(window.location.pathname, $("#config-form").serialize())
        .done(function () {
          location.reload();
        })
        .fail(function (data) {
          if (data.status == 400) {
            // validation error
            showConfigModal(data.responseText);
          } else if (data.status == 401) {
            alert('You are unauthorized to make this change.');
          } else {
            alert('Unexpected error. Please raise a bug at github.com/jbrunton/jira-team-metrics.');
          }
        });
  }
</script>